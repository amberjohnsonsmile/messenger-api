import { body, query, ValidationChain } from 'express-validator'

export const receivedValidator: ValidationChain[] = [
  query('recipient')
    .exists()
    .withMessage("'recipient' must be present")
    .isLength({ min: 3, max: 36 })
    .withMessage("'recipient' must be between 3 and 36 characters"),
  query('sender')
    .optional()
    .isLength({ min: 3, max: 36 })
    .withMessage("'sender' must be between 3 and 36 characters"),
  query('range')
    .optional()
    // Max 1,000,000 because who needs messages from before 716 BCE?
    .isInt({ min: 1, max: 1000000 })
    .withMessage("'range' must be a positive integer of days")
]

export const conversationValidator: ValidationChain[] = [
  query('recipient')
    .exists()
    .withMessage("'recipient' must be present")
    .isLength({ min: 3, max: 36 })
    .withMessage("'recipient' must be between 3 and 36 characters"),
  query('sender')
    .exists()
    .withMessage("'sender' must be present")
    .isLength({ min: 3, max: 36 })
    .withMessage("'sender' must be between 3 and 36 characters"),
  query('range')
    .optional()
    .isInt({ min: 1, max: 1000000 })
    .withMessage("'range' must be an positive integer of days")
]

export const sendValidator: ValidationChain[] = [
  body('recipient')
    .exists()
    .withMessage("'recipient' must be present")
    .isLength({ min: 3, max: 36 })
    .withMessage("'recipient' must be between 3 and 36 characters"),
  body('sender')
    .exists()
    .withMessage("'sender' must be present")
    .isLength({ min: 3, max: 36 })
    .withMessage("'sender' must be between 3 and 36 characters"),
  body('content')
    .exists()
    .withMessage("'content' must be present")
    // Twitter limits to 280 characters, and they seem to be doing alright
    .isLength({ min: 1, max: 280 })
    .withMessage("'content' must be between 1 and 280 characters")
]

export const markReadValidator: ValidationChain[] = [
  body('messageId')
    .exists()
    .withMessage("'messageId' must be present")
    .isInt({ min: 1 })
    .withMessage("'messageId' must be a positive integer")
    // This is the max length postgres will allow for an autogenerated int id
    .isLength({ min: 1, max: 2147483647 })
    .withMessage("'messageId' must be between 1 and 2147483647 characters"),
  body('read')
    .exists()
    .withMessage("'read' must be present")
    .isBoolean()
    .withMessage("'read' must be a boolean")
]
